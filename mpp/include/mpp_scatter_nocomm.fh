!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                             !
!                                MPP_SCATTER                                  !
!                                                                             !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

subroutine MPP_SCATTER_PELIST_2D_(is, ie, js, je, pelist, array_seg, data, is_root_pe, ishift, jshift)
  integer,                           intent(in)    :: is, ie, js, je !< indices of segment array
  integer,   dimension(:),           intent(in)    :: pelist !<PE list of target pes,
                                                             !! must be in monotonic increasing order
  MPP_TYPE_, dimension(is:ie,js:je), intent(inout)    :: array_seg !< 2D array of output data
  MPP_TYPE_, dimension(:,:),         intent(in) :: data !< 2D array of input data
  logical,                           intent(in)    :: is_root_pe !< true if calling from root
  integer,   optional,               intent(in)    :: ishift, jshift !< Offsets of array elements

  integer :: n

  if( .NOT.module_is_initialized ) call mpp_error( FATAL, 'MPP_SCATTER: You must first call mpp_init.' )
  return
end subroutine MPP_SCATTER_PELIST_2D_

subroutine MPP_SCATTER_PELIST_3D_(is, ie, js, je, nk, pelist, array_seg, data, is_root_pe, &
  ishift, jshift)
  integer,                                intent(in)    :: is, ie, js, je, nk
  integer,   dimension(:),                intent(in)    :: pelist
  MPP_TYPE_, dimension(is:ie,js:je,1:nk), intent(inout)    :: array_seg
  MPP_TYPE_, dimension(:,:,:),            intent(in) :: data
  logical,                                intent(in)    :: is_root_pe
  integer,   optional,                    intent(in)    :: ishift, jshift

  integer :: n

  if( .NOT.module_is_initialized ) call mpp_error( FATAL, 'MPP_SCATTER: You must first call mpp_init.' )
  return
end subroutine MPP_SCATTER_PELIST_3D_
